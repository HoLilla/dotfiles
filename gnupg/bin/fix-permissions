#!/usr/bin/env run-cargo-script

use std::env;
use std::fs;
use std::fs::File;
use std::fs::OpenOptions;
use std::os::unix::fs::OpenOptionsExt;
use std::os::unix::fs::PermissionsExt;

fn main() -> std::io::Result<()> {
    let data_home = env!("XDG_DATA_HOME");
    let gnupg_dir = format!("{}/gnupg", data_home);
    let config_file = format!("{}/gpg-agent.conf", gnupg_dir);
    fs::create_dir_all(&gnupg_dir);

    set_directory_permission(&gnupg_dir, 0o700);
    set_file_permission(&config_file, 0o600);

    Ok(())
}

fn set_file_permission(config_file: &str, permission: u32) {
    fs::OpenOptions::new()
        .create(true)
        .write(true)
        .append(true)
        .mode(permission)
        .open(config_file)
        .unwrap();
}

fn set_directory_permission(config_file: &str, permission: u32) {
    let mut permissions = fs::metadata(config_file).unwrap().permissions();
    permissions.set_mode(permission); // Read/write for owner and read for others.
    fs::set_permissions(config_file, permissions).unwrap();
}
