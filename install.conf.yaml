- defaults:
    link:
      relink: true
      create: true
      force: true
    shell:
      stdin: true
      stdout: true
      stderr: true
    clean:
      force: true

- clean:
    ~/:
      force: true
    ~/.config:
      recursive: true
    ~/.tmux:
      recursive: true
    ~/.gnupg:
      recursive: true
    ~/Documents/Code:
      force: false

- link:
    # Convenience
    ~/Documents/Code: ~/Code
    # Bash
    ~/.bashrc: bash/xdg-shim
    ~/.config/bash/bashrc: bash/bashrc
    # Fasd
    ~/.fasdrc: fasd/.fasdrc
    ~/.config/fasd/.fasdrc: fasd/.fasdrc
    # Fish
    ~/.config/fish/config.fish: fish/config.fish
    ~/.config/fish/fishfile: fish/fishfile
    ~/.config/fish/functions/:
      glob: true
      path: fish/functions/*
    # Git
    ~/.config/git/config: git/config
    ~/.config/git/message: git/message
    ~/.config/git/ignore: git/ignore
    ~/.config/git/init-template/hooks/prepare-commit-msg: git/prepare-commit-msg-hook
    ~/.config/git/init-template/hooks/commit-msg: git/commit-msg-hook
    # Git Duet
    ~/.config/git-duet/authors.yml: git-duet/authors.yml
    ~/.bin/git-duet: git-duet/wrap-for-sops
    ~/.bin/git-duet-commit: git-duet/wrap-for-sops
    ~/.bin/git-duet-install-hook: git-duet/wrap-for-sops
    ~/.bin/git-duet-merge: git-duet/wrap-for-sops
    ~/.bin/git-duet-post-commit: git-duet/wrap-for-sops
    ~/.bin/git-duet-prepare-commit-msg: git-duet/wrap-for-sops
    ~/.bin/git-duet-pre-commit: git-duet/wrap-for-sops
    ~/.bin/git-duet-revert: git-duet/wrap-for-sops
    ~/.bin/git-solo: git-duet/wrap-for-sops

    # GnuPG
    ~/local/share/gnupg/gpg-agent/conf: gnupg/gpg-agent.conf
    # Starship
    ~/.config/starship.toml: starship/starship.toml
    # Tmux
    ~/.config/tmux/tmux.conf: tmux/tmux.conf
    # Vim
    ~/.config/vim/.vimrc: vim/.vimrc
    # ZSH
    ~/.zshenv: zsh/.zshenv
    ~/.config/zsh/.zshrc: zsh/.zshrc
    # Kitty
    ~/.config/kitty/kitty.conf: kitty/kitty.conf
    ~/.config/kitty/dracula.conf: kitty/dracula.conf
    # Sops
    ~/.sops.yaml: sops/sops.yaml

- create:
    - ~/Code/
    - ~/Downloads/
    - ~/Documents/
    - ~/Desktop/
    - ~/Library/Caches/
    - ~/Library/Caches/run/
    - ~/.local/share/
    # Tmux
    - ~/.config/tmux/plugins

- shell:
    # Brew
    - command: ./brew/bin/install
      description: "🍻 Homebrew: Installing if it's not already installed"
    - command: ./brew/bin/bundle-install
      description: "🍻 Homebrew: Installing, removing and updating packages"
    - command: ./brew/bin/test
      description: "🍻 Homebrew: Testing packages installed"
    # Crontab
    - command: ./crontab/bin/set-crontab
      description: " crontab: Install a crontab"
    # Fish
    - command: ./fish/bin/make-default-shell
      description: "🐠 fish: Setting as the default shell"
    - command: ./fish/bin/update-plugins
      description: "🐠 fish: Updating plugins"
    - command: ./fish/bin/test
      description: "🐠 fish: Testing it runs"
    # Bash
    - command: ./bash/bin/test
      description: " Bash: Testing it runs"
    # FZF
    - command: ./fzf/bin/configure
      description: " fzf: Installing shell extensions"
    # Git \
    - command: ./git/bin/test
      description: " Git: Testing it runs"
    # Git Duet
    - command: ./git-duet/bin/test
      description: "👭 git-duet: Testing it runs"
    # GnuPG
    - command: ./gnupg/bin/fix-permissions
      description: "🔐 GnuPG: Ensuring correct permissions on Configuration"
    - command: ./gnupg/bin/test
      description: "🔐 GnuPG: Testing it runs"
    # TLDR
    - command: ./tldr/bin/test
      description: " tldr: Testing it runs"
    # Vim
    - command: ./vim/bin/test
      description: " Vim: Testing it runs"
    # ZSH
    - command: ./zsh/bin/fix-compaudit
      description: " Z shell: Ensure no compaudit issues"
    - command: ./zsh/bin/test
      description: " Z shell: Testing it runs"
    # SOPS
    - command: ./sops/bin/setup
      description: "🔑 SOPS: Create the infrastructure needed"
    # 1password secrets
    - command: ./1password/bin/generate-envsecret
      description: "ﲘ 1password: Create the infrastructure needed"
